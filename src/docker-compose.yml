version: "3"
services:

  web-nginx: 
    container_name: web-nginx
    image: nginx
    restart: always
    ports: 
      - "8888:80"
    volumes: 
      - ./config/webnginx.conf:/etc/nginx/conf.d/default.conf
  api-nginx: 
    container_name: api-nginx
    image: nginx
    restart: always
    ports: 
      - "9999:80"
    volumes: 
      - ./config/apinginx.conf:/etc/nginx/conf.d/default.conf
  manage-web1: 
    container_name: web1
    build: 
      context: ./Convience.Web/Managent
      dockerfile: Dockerfile
    restart: always
    ports:
      - "6001:80"
    volumes:
      #配置文件修改后需要重新构建web-nginx的容器，因为可能里边包含旧版缓存
      - ./config/config.json:/usr/share/nginx/html/assets/config/config.json
      - ./config/web.conf:/etc/nginx/conf.d/default.conf
  manage-web2: 
    container_name: web2
    build: 
      context: ./Convience.Web/Managent
      dockerfile: Dockerfile
    restart: always
    ports:
      - "6002:80"
    volumes:
      - ./config/config.json:/usr/share/nginx/html/assets/config/config.json
      - ./config/web.conf:/etc/nginx/conf.d/default.conf
  manage-api1:
    container_name: api1
    build: 
      context: .
      dockerfile: Convience.Applications/Convience.ManagentApi/Dockerfile
    restart: always
    ports:
      - "5001:80"
    volumes:
      - ./config/appsettings.json:/app/appsettings.json
  manage-api2:
    container_name: api2
    build: 
      context: .
      dockerfile: Convience.Applications/Convience.ManagentApi/Dockerfile
    restart: always
    ports:
      - "5002:80"
    volumes:
      - ./config/appsettings.json:/app/appsettings.json
  myproject-pgsql: 
    container_name: pgsql
    image: postgres
    restart: always
    privileged: true
    ports: 
      - "5432:5432"
    environment: 
      POSTGRES_USER: tester
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: tester
  myproject-mongo: 
    container_name: mongoStore
    image: mongo
    restart: always
    ports:
      - "32768:27017"


